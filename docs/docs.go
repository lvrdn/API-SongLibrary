// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/songs": {
            "get": {
                "description": "Get songs list with pagination and filtering by all fields",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get songs list with pagination and filtering by all fields",
                "operationId": "get-all",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "song name",
                        "name": "song",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "group",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "releaseDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text, word, letters",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "if need song with video use: true, else use:false",
                        "name": "link",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/song.Song"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "something bad with db or marshal/unmarshal data"
                    }
                }
            },
            "put": {
                "description": "Add new song to library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Add new song to library",
                "operationId": "new",
                "parameters": [
                    {
                        "description": "song and group names",
                        "name": "bodyJSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"song\":\"sone song name\",\"group\":\"some group name\"}"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "something bad with db or marshal/unmarshal data"
                    },
                    "502": {
                        "description": "something bad with another server for getting song info"
                    }
                }
            },
            "post": {
                "description": "Update song data",
                "tags": [
                    "songs"
                ],
                "summary": "Update song data",
                "operationId": "update",
                "parameters": [
                    {
                        "description": "song id and at least one of the listed parameters required",
                        "name": "bodyJSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"id\":2,\"releaseDate\":\"25.02.2012\",\"text\":\"some text\",\"link\":\"some link\"}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "something bad with db or marshal/unmarshal data"
                    }
                }
            },
            "delete": {
                "description": "Delete song",
                "tags": [
                    "songs"
                ],
                "summary": "Delete song",
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "song id",
                        "name": "bodyJSON",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "{\"id\":2}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "something bad with db or marshal/unmarshal data"
                    }
                }
            }
        },
        "/api/songs/{id}": {
            "get": {
                "description": "Get song text with verse pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Get song text with verse pagination",
                "operationId": "get",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "song id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "response": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "resesInSong": {
                                                            "type": "integer"
                                                        },
                                                        "verses": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/song.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/song.Response"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "message": {
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "something bad with db or marshal/unmarshal data"
                    }
                }
            }
        }
    },
    "definitions": {
        "song.Response": {
            "description": "response format",
            "type": "object",
            "additionalProperties": true
        },
        "song.Song": {
            "description": "song information",
            "type": "object",
            "properties": {
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SongLibrary Swagger API",
	Description:      "API for song library",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
